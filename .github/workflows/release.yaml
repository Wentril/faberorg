name: Release and Deploy

env:
  APP_NAME: faberorg
  BRANCH_NAME: master

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on new Git tags like v1.0.0, v1.1.0

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Required for pushing changes back to the repo
          token: ${{ secrets.GITHUB_TOKEN }} # Or a dedicated PAT for better control

      - name: Extract version from Git tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV
        # For tag 'v1.2.3', VERSION will be '1.2.3'

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and tag Docker image
        run: |
          REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME=ghcr.io/${REPO}/${APP_NAME}:${{ env.VERSION }}
          docker build -t $IMAGE_NAME .
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME

      - name: Configure Git for changes
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions-bot@users.noreply.github.com"

      - name: Update Kustomize manifest
        run: |
          cd k8s/overlay/production
          kustomize edit set image $IMAGE_NAME
          git add kustomization.yaml
          git commit -m "chore(release): Update image to ${{ env.VERSION }}" || echo "No changes to commit"
        # The '|| echo "No changes to commit"' handles cases where the image tag might already be up-to-date
        # (e.g., if a previous attempt failed after image push but before commit)

      - name: Push Kustomize changes
        run: |
          git push origin HEAD:${BRANCH_NAME}
